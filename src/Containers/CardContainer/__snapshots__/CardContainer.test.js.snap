// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CardContainer should match snapshot with all data passed in 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CardContainer
    props={
      Object {
        "category": "planets",
        "planets": Array [
          Object {
            "Climate": "temperate",
            "Name": "Alderaan",
            "Population": "2000000000",
            "Terrain": "grasslands, mountains",
          },
          Object {
            "Climate": "temperate, tropical",
            "Name": "Yavin IV",
            "Population": "1000",
            "Terrain": "jungle, rainforests",
          },
          Object {
            "Climate": "frozen",
            "Name": "Hoth",
            "Population": "unknown",
            "Terrain": "tundra, ice caves, mountain ranges",
          },
          Object {
            "Climate": "murky",
            "Name": "Dagobah",
            "Population": "unknown",
            "Terrain": "swamp, jungles",
          },
          Object {
            "Climate": "temperate",
            "Name": "Bespin",
            "Population": "6000000",
            "Terrain": "gas giant",
          },
        ],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": undefined,
      "className": "card-container",
    },
    "ref": null,
    "rendered": null,
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": undefined,
        "className": "card-container",
      },
      "ref": null,
      "rendered": null,
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
